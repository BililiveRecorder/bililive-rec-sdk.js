//
// DO NOT EDIT THIS FILE
//
// It is automatically generated by "src/api-generator"
//
export interface BooleanOptional {
  hasValue: boolean;
  value: boolean;
}

export interface CreateRoomDto {
  roomId: number;
  autoRecord: boolean;
}

export enum CuttingMode {
  // 禁用
  Disabled = 0,
  // 根据时间切割
  ByTime = 1,
  // 根据文件大小切割
  BySize = 2,
}

export interface CuttingModeOptional {
  hasValue: boolean;
  value: CuttingMode;
}

export interface DefaultConfig {
  recordMode: RecordMode;
  cuttingMode: CuttingMode;
  cuttingNumber: number;
  recordDanmaku: boolean;
  recordDanmakuRaw: boolean;
  recordDanmakuSuperChat: boolean;
  recordDanmakuGift: boolean;
  recordDanmakuGuard: boolean;
  recordingQuality: string;
  recordFilenameFormat: string;
  webHookUrls: string;
  webHookUrlsV2: string;
  wpfShowTitleAndArea: boolean;
  cookie: string;
  liveApiHost: string;
  timingCheckInterval: number;
  timingStreamRetry: number;
  timingStreamRetryNoQn: number;
  timingStreamConnect: number;
  timingDanmakuRetry: number;
  timingWatchdogTimeout: number;
  recordDanmakuFlushInterval: number;
}

export interface GlobalConfigDto {
  optionalRecordMode: RecordModeOptional;
  optionalCuttingMode: CuttingModeOptional;
  optionalCuttingNumber: UInt32Optional;
  optionalRecordDanmaku: BooleanOptional;
  optionalRecordDanmakuRaw: BooleanOptional;
  optionalRecordDanmakuSuperChat: BooleanOptional;
  optionalRecordDanmakuGift: BooleanOptional;
  optionalRecordDanmakuGuard: BooleanOptional;
  optionalRecordingQuality: StringOptional;
  optionalRecordFilenameFormat: StringOptional;
  optionalWebHookUrls: StringOptional;
  optionalWebHookUrlsV2: StringOptional;
  optionalWpfShowTitleAndArea: BooleanOptional;
  optionalCookie: StringOptional;
  optionalLiveApiHost: StringOptional;
  optionalTimingCheckInterval: UInt32Optional;
  optionalTimingStreamRetry: UInt32Optional;
  optionalTimingStreamRetryNoQn: UInt32Optional;
  optionalTimingStreamConnect: UInt32Optional;
  optionalTimingDanmakuRetry: UInt32Optional;
  optionalTimingWatchdogTimeout: UInt32Optional;
  optionalRecordDanmakuFlushInterval: UInt32Optional;
}

export enum RecordMode {
  Standard = 0,
  RawData = 1,
}

export interface RecordModeOptional {
  hasValue: boolean;
  value: RecordMode;
}

export interface RecorderVersion {
  major: string;
  minor: string;
  patch: string;
  preReleaseTag: string;
  preReleaseTagWithDash: string;
  preReleaseLabel: string;
  preReleaseLabelWithDash: string;
  preReleaseNumber: string;
  weightedPreReleaseNumber: string;
  buildMetaData: string;
  buildMetaDataPadded: string;
  fullBuildMetaData: string;
  majorMinorPatch: string;
  semVer: string;
  legacySemVer: string;
  legacySemVerPadded: string;
  assemblySemVer: string;
  assemblySemFileVer: string;
  fullSemVer: string;
  informationalVersion: string;
  branchName: string;
  escapedBranchName: string;
  sha: string;
  shortSha: string;
  nuGetVersionV2: string;
  nuGetVersion: string;
  nuGetPreReleaseTagV2: string;
  nuGetPreReleaseTag: string;
  versionSourceSha: string;
  commitsSinceVersionSource: string;
  commitsSinceVersionSourcePadded: string;
  uncommittedChanges: string;
  commitDate: string;
}

export interface RestApiError {
  code: RestApiErrorCode;
  message: string;
}

export enum RestApiErrorCode {
  // 错误
  Unknown = -1,
  // 房间号不在允许的范围内
  RoomidOutOfRange = -2,
  // 房间已存在
  RoomExist = -3,
  // 房间不存在
  RoomNotFound = -4,
}

export interface RoomConfigDto {
  autoRecord: boolean;
  optionalRecordMode: RecordModeOptional;
  optionalCuttingMode: CuttingModeOptional;
  optionalCuttingNumber: UInt32Optional;
  optionalRecordDanmaku: BooleanOptional;
  optionalRecordDanmakuRaw: BooleanOptional;
  optionalRecordDanmakuSuperChat: BooleanOptional;
  optionalRecordDanmakuGift: BooleanOptional;
  optionalRecordDanmakuGuard: BooleanOptional;
  optionalRecordingQuality: StringOptional;
}

export interface RoomDto {
  objectId: string;
  roomId: number;
  autoRecord: boolean;
  shortId: number;
  name: string;
  title: string;
  areaNameParent: string;
  areaNameChild: string;
  recording: boolean;
  streaming: boolean;
  danmakuConnected: boolean;
  autoRecordForThisSession: boolean;
  stats: RoomStatsDto;
}

export interface RoomStatsDto {
  sessionDuration: number;
  sessionMaxTimestamp: number;
  fileMaxTimestamp: number;
  durationRatio: number;
  totalInputBytes: number;
  totalOutputBytes: number;
  networkMbps: number;
}

export interface SetGlobalConfig {
  optionalRecordMode: RecordModeOptional;
  optionalCuttingMode: CuttingModeOptional;
  optionalCuttingNumber: UInt32Optional;
  optionalRecordDanmaku: BooleanOptional;
  optionalRecordDanmakuRaw: BooleanOptional;
  optionalRecordDanmakuSuperChat: BooleanOptional;
  optionalRecordDanmakuGift: BooleanOptional;
  optionalRecordDanmakuGuard: BooleanOptional;
  optionalRecordingQuality: StringOptional;
  optionalRecordFilenameFormat: StringOptional;
  optionalWebHookUrls: StringOptional;
  optionalWebHookUrlsV2: StringOptional;
  optionalWpfShowTitleAndArea: BooleanOptional;
  optionalCookie: StringOptional;
  optionalLiveApiHost: StringOptional;
  optionalTimingCheckInterval: UInt32Optional;
  optionalTimingStreamRetry: UInt32Optional;
  optionalTimingStreamRetryNoQn: UInt32Optional;
  optionalTimingStreamConnect: UInt32Optional;
  optionalTimingDanmakuRetry: UInt32Optional;
  optionalTimingWatchdogTimeout: UInt32Optional;
  optionalRecordDanmakuFlushInterval: UInt32Optional;
}

export interface SetRoomConfig {
  autoRecord: boolean;
  optionalRecordMode: RecordModeOptional;
  optionalCuttingMode: CuttingModeOptional;
  optionalCuttingNumber: UInt32Optional;
  optionalRecordDanmaku: BooleanOptional;
  optionalRecordDanmakuRaw: BooleanOptional;
  optionalRecordDanmakuSuperChat: BooleanOptional;
  optionalRecordDanmakuGift: BooleanOptional;
  optionalRecordDanmakuGuard: BooleanOptional;
  optionalRecordingQuality: StringOptional;
}

export interface StringOptional {
  hasValue: boolean;
  value: string;
}

export interface UInt32Optional {
  hasValue: boolean;
  value: number;
}